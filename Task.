import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import java.awt.image.ImageObserver;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.TimeUnit;

public class TaskAutomation_3 {
    public static void main(String[] args) throws InterruptedException {

        System.setProperty("webdriver.chrome.driver", "/Users/zukhraabdukolikova/Desktop/Browser Drivers/chromedriver");

               WebDriver driver = new ChromeDriver();


        //1.  Recaptcha
//        WebDriverWait wait = new WebDriverWait(driver, 30);
//        wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(By.xpath("//iframe[starts-with(@name,'a-')]")));
//        WebElement element = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("div.recaptcha-checkbox-checkmark")));
//        element.click();



        //Maximize window and wait
        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(2000, TimeUnit.SECONDS);

        // 1. Navigate to http (URL): (carfax.com)
        driver.get("https://www.carfax.com/cars-for-sale");

        // 2.Click on Find a Used Car
        driver.findElement(By.cssSelector(".menu__item__link")).click();

        // 3.Verify the page title contains the word “Used Cars”
        WebElement actualWord= driver.findElement(By.partialLinkText("Used C"));
        String name=actualWord.getText();
        System.out.println("The page name is : "+ name);
        System.out.println("******************************");
        Assert.assertEquals("Used Cars for Sale",name);

        Thread.sleep(2000);

        // 4.Check Make DropDown box
        List<WebElement> n=driver.findElements(By.xpath("//select[@name='make']"));
        for (WebElement s:n) {
            System.out.println("Drop Down Make box list: "+s.getText());
        }


        // Choose “Tesla” for Make
      Select MakedropDown= new Select(driver.findElement(By.name("make")));
      MakedropDown.selectByValue("Tesla");
      System.out.println("******************************");


        // 5 Verify that the Select Model dropdown box contains 4 current Tesla models - (Model 3, Model S, Model X, Model Y).
         WebElement modelDropDown= driver.findElement(By.xpath("//select[@class='form-control search-model  search-model--lp']"));
         modelDropDown.click();
         Select model= new Select(modelDropDown);
        List<WebElement> getOptions = model.getOptions();
        List<String> list = new ArrayList<String>();
        for (WebElement element1 : getOptions) {
            list.add(element1.getText());
        }
        System.out.println("Drop Down Model box list: "+ list);



        // 6.Choose “Model S” for Model.
        Select modelType= new Select(driver.findElement(By.xpath("//select[@class='form-control search-model  search-model--lp']")));
        modelType.selectByIndex(2);

        //7.Enter the zip code 22182 and click Next
        WebElement zipCode= driver.findElement(By.xpath("//input[@name='zip']"));
        zipCode.sendKeys("22182");
        WebElement text= driver.findElement(By.xpath("//button[@id='make-model-form-submit-button']"));
        text.click();
        System.out.println("******************************");


        // 8.Verify that the page contains the text “Step 2 – Show me cars with”
      WebElement actualTextName=driver.findElement(By.xpath("//h3[@class='searchForm-wrapper-header--lp']"));
      System.out.println(actualTextName.getText());

      WebElement actualName=driver.findElement(By.xpath("//h3[@class='searchForm-wrapper-header--lp']"));
      Assert.assertEquals(true,actualName.isDisplayed());
      System.out.println("Test is Passed");
      System.out.println("******************************");



        // 9.Check all 4 checkboxes.
         WebElement checkbox= driver.findElement(By.xpath("//span[@class='checkbox-list-item--fancyCbx'] "));
          checkbox.click();
        Thread.sleep(1000);
        WebElement checkbox2= driver.findElement(By.xpath("//span[@aria-label='Toggle oneOwner'] "));
        checkbox2.click();
        Thread.sleep(1000);
        WebElement checkbox3= driver.findElement(By.xpath("//span[@aria-label='Toggle personalUse'] "));
        checkbox3.click();
        Thread.sleep(1000);
        WebElement checkbox4= driver.findElement(By.xpath("//span[@aria-label='Toggle serviceRecords'] "));
        checkbox4.click();


        // 10.Save the count of results from “Show me X Results” button. In this case it is 10
        Thread.sleep(1000);
        WebElement results = driver.findElement(By.xpath("//span[@class='totalRecordsText']"));
        String resultResult = results.getText();

 //11.Click on “Show me x Results” button.
     driver.findElement(By.xpath("//button[@class='button large primary-green show-me-search-submit']")).click();
        Thread.sleep(1000);

  // 12.Verify the results count by getting the actual number of results displayed in the page by getting the count of WebElements that represent each result
        List<WebElement> carList = driver.findElements(By.xpath("//div[@class='srp-list-container srp-list-container--srp']//article[contains(@id, 'listing')]"));
        int d=0;
        d= carList.size();
        String count=d+"";
        System.out.println("Result saved cars are:" + count);
        System.out.println("******************************");
        Thread.sleep(1000);
        if(count.equals(resultResult)){
            System.out.println("Passed");
        }else {
            System.out.println("Failed");
        }
        System.out.println("******************************");
        Thread.sleep(1000);

        //13.Verify that each result header contains “Tesla Model S”.
        List<WebElement>namec=driver.findElements(By.xpath("//h4[contains(text(),'Tesla Model S')]"));
        for (WebElement currency:namec) {
            System.out.println(currency.getText());
        }
        int rowofDoge=0;
        for (int i=0; i<namec.size();i++){
            if(namec.get(i).getText().equals("Model S")){
                rowofDoge=i;
            }
        }
        System.out.println(rowofDoge);
        System.out.println("******************************");




        //14.Get the price of each result and save them into a List in the order of their appearance. (You can exclude “Call for price” options)


        List<WebElement> selectedOption =driver.findElements(By.xpath("//span[@class='srp-list-item-price']"));
        for (WebElement curren:selectedOption) {
            if(curren.isEnabled()){
            System.out.println(curren.getText());
        }}
        Thread.sleep(1000);


        //15.	Choose “Price - High to Low” option from the Sort By menu
  WebElement price=driver.findElement(By.xpath("//select[@class='srp-header-sort-select srp-header-sort-select-desktop--srp']"));
  Select print= new Select(price);
  print.selectByVisibleText("Price - High to Low");
        Thread.sleep(1000);

        //16.	Verify that the results are displayed from high to low price.
        System.out.println(driver.findElement(By.xpath("//option[@id='priceDesc']")).getText());
        Thread.sleep(1000);
        System.out.println("******************************");

        //17 Choose “Mileage - Low to High” option from Sort By menu/ 18.Verify that the results are displayed from low to high mileage.
        WebElement actualmileage=driver.findElement(By.xpath("//option[@id='mileageAsc']//parent::select[@aria-label='SelectSort']"));
        Select actua= new Select(actualmileage);
        actua.selectByVisibleText("Mileage - Low to High");
        String mil=actua.getFirstSelectedOption().getText();
        System.out.println(mil);
//        Assert.assertEquals(true,actualmileage.isDisplayed());
//        System.out.println(actualmileage.getText());
        System.out.println("******************************");
        Thread.sleep(1000);


        //19.	Choose “Year - New to Old” option from Sort By menu/20.	Verify that the results are displayed from new to old year.
        Select year= new Select(driver.findElement(By.xpath("//option[@id='yearDesc']//ancestor::select[@aria-label='SelectSort']")));
        year.selectByIndex(5);
        String yearValue=year.getFirstSelectedOption().getText();
        System.out.println(yearValue);
        Thread.sleep(2000);


 driver.quit();

        }

    }

